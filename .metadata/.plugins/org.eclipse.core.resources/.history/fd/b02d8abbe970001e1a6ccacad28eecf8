package com.aurionpro.controller;

import java.io.IOException;

import javax.annotation.Resource;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.sql.DataSource;

import org.apache.catalina.User;

import com.aurionpro.jdbc.UserDemo;

/**
 * Servlet implementation class UserController
 */
@WebServlet("/UserController")
public class UserController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public UserController() {
		super();
	}

	@Resource(name = "jdbc/bank_db")
	private DataSource dataSource;

	UserDemo userDemo;

	@Override
	public void init() throws ServletException {
		super.init();

		userDemo = new UserDemo(dataSource);
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String command = request.getParameter("command");
		System.out.println(command);

		HttpSession session = request.getSession();
		Object user = (Object) session.getAttribute("isUser");

		if (user != null) {
			switch (command) {
			case "load":
				loadUserInformation(request, response);
				break;
			case "accInfo":
				fetchingAccountinfo(request, response);
				break;
			case "update":
				updateuserInformation(request, response);
				break;
			}
		} else {
			response.sendRedirect("login.jsp");
		}

	}

	private void loadUserInformation(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		int acc_no = Integer.parseInt(request.getParameter("acc_no"));
		User user = userDemo.getUserDetail(acc_no);
		request.setAttribute("user", user);
		RequestDispatcher dispatcher = request.getRequestDispatcher("user-edit-information.jsp");
		dispatcher.forward(request, response);
	}

	private void fetchingAccountinfo(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		int acc_no = Integer.parseInt(request.getParameter("acc_no"));
		double balance = Double.parseDouble(request.getParameter("balance"));
		System.out.println("Before call: " + balance);
		// System.out.println(request.getAttribute("balance"));

		request.setAttribute("acc_no", acc_no);
		request.setAttribute("balance", balance);
		RequestDispatcher dispatcher = request.getRequestDispatcher("user-transaction.jsp");
		dispatcher.forward(request, response);
	}

	private void updateuserInformation(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		int acc_no = Integer.parseInt(request.getParameter("acc_no"));
		String user_name = request.getParameter("user_name");
		String email = request.getParameter("email");
		String mob = request.getParameter("mob");
		String pass = request.getParameter("pass");

		// double balance = Double.parseDouble(request.getParameter("balance"));
		// System.out.println("Current balance 147: " + balance);
		// request.setAttribute("balance", balance);
		//
		// User user = new User(acc_no, user_name, email, pass, mob, balance);
		// System.out.println(user);

		User wasUser = userDemo.getUserDetail(acc_no);
		System.out.println("Before update: " + wasUser);

		User user = new User(acc_no, user_name, email, pass, mob);
		System.out.println("Values passed for update: " + user);

		User isUser = userDemo.updateUserInformation(user);
		System.out.println("Values after DB Update: " + isUser);
		request.setAttribute("isUser", isUser);
		request.setAttribute("balance", isUser.getBalance());

		// String old_email = request.getParameter("old_email");
		// System.out.println("Old email 156: " + old_email);
		// String old_pass = request.getParameter("old_pass");
		// System.out.println("Old pass 158: " + old_pass);

		if (!wasUser.getEmail().equals(isUser.getEmail()) || !wasUser.getPass().equals(isUser.getPass())) {
			response.sendRedirect(request.getContextPath() + "/LogoutController");
		} else {
			RequestDispatcher dispatcher = request.getRequestDispatcher("user-dashboard.jsp");
			dispatcher.forward(request, response);
		}

	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}

package com.aurionpro.controller;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;

import com.aurionpro.jdbc.StudentDbUtil;
import com.aurionpro.model.Student;

/**
 * Servlet implementation class StudentController
 */
@WebServlet("/StudentController")
public class StudentController extends HttpServlet {
	@Resource(name = "jdbc/student-source")
	private DataSource datasource;

	private StudentDbUtil dbUtil;

	@Override
	public void init() throws ServletException {
		super.init();
		dbUtil = new StudentDbUtil(datasource);
	}

	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public StudentController() {
		super();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String command = request.getParameter("action");
		if (command == null) {
			command = "list";
		}
		switch (command) {
		case "list":

			try {
				listStudent(request, response);
			} catch (SQLException e) {
				e.printStackTrace();
			}

			break;

		case "add":

			try {
				addStudent(request, response);
			} catch (SQLException e) {
				e.printStackTrace();
			}

			// System.out.println("add operation");
			break;

		case "update":
			try {
				getStudentForUpdate(request, response);
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			break;

		case "update-save":
			try {
				updateStudent(request, response);
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			break;

		case "delete":
			try {
				deleteStudent(request, response);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			break;

		case "search":
			try {
				search(request, response);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			break;
			
		

		default:
			try {
				listStudent(request, response);
			} catch (SQLException e) {
				e.printStackTrace();
			}

		}
		// listStudent(request, response);
		// System.out.println("Hello");
		// System.out.println(request.getParameter("action"));
	}

	


	

	private void searchStudent(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
		String firstName = request.getParameter("first-name");
		if (firstName.equals("")) {
			response.sendRedirect(request.getContextPath() + "/StudentController");

		} else {
			List<Student> studentList = dbUtil.getStudentsByFirstName(firstName);

			RequestDispatcher dispatcher = request.getRequestDispatcher("/list-students.jsp");
			request.setAttribute("allStudents", studentList);
			dispatcher.forward(request, response);

		}
	}

	private void deleteStudent(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException, SQLException {
		int id = Integer.parseInt(request.getParameter("id"));
		dbUtil.deleteStudent(id);
		listStudent(request, response);

	}

	private void updateStudent(HttpServletRequest request, HttpServletResponse response)
			throws SQLException, ServletException, IOException {
		int id = Integer.parseInt(request.getParameter("id"));
		String fname = request.getParameter("firstname");
		String lname = request.getParameter("lastname");
		String email = request.getParameter("email");
		Student stud = new Student(id, fname, lname, email);

		dbUtil.updateStudent(stud);
		// listStudent(request, response);
		response.sendRedirect(request.getContextPath() + "/StudentController");

	}

	private void getStudentForUpdate(HttpServletRequest request, HttpServletResponse response)
			throws SQLException, ServletException, IOException {
		int id = Integer.parseInt(request.getParameter("id"));
		Student student = dbUtil.getStudentById(id);
		// System.out.println(student);
		request.setAttribute("student", student);
		RequestDispatcher dispatcher = request.getRequestDispatcher("/update-student.jsp");
		dispatcher.forward(request, response);
	}

	private void addStudent(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException, SQLException {
		String fname = request.getParameter("firstname");
		String lname = request.getParameter("lastname");
		String email = request.getParameter("email");
		Student stud = new Student(fname, lname, email);

		dbUtil.addNewStudent(stud);
		// System.out.println(stud);
		// listStudent(request, response);
		response.sendRedirect(request.getContextPath() + "/StudentController");

	}

	/**
	 * @throws SQLException
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void listStudent(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException, SQLException {
		List<Student> studentList = dbUtil.getAllStudents();
		RequestDispatcher dispatcher = request.getRequestDispatcher("/list-students.jsp");
		request.setAttribute("allStudents", studentList);
		dispatcher.forward(request, response);
	}

}
